// <auto-generated />
using ExportandImportExcelSheet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExportandImportExcelSheet.Migrations
{
    [DbContext(typeof(SchooleDBPractice))]
    partial class SchooleDBPracticeModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExportandImportExcelSheet.Models.Schoole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schoole");
                });

            modelBuilder.Entity("ExportandImportExcelSheet.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchooleId")
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchooleId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ExportandImportExcelSheet.Models.Subject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("ExportandImportExcelSheet.Models.Teasher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchooleId")
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchooleId");

                    b.ToTable("Teasher");
                });

            modelBuilder.Entity("SchooleSubject", b =>
                {
                    b.Property<int>("SchoolesId")
                        .HasColumnType("int");

                    b.Property<int>("Subjectsid")
                        .HasColumnType("int");

                    b.HasKey("SchoolesId", "Subjectsid");

                    b.HasIndex("Subjectsid");

                    b.ToTable("SchooleSubject");
                });

            modelBuilder.Entity("StudentSubject", b =>
                {
                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.Property<int>("Subjectsid")
                        .HasColumnType("int");

                    b.HasKey("StudentsId", "Subjectsid");

                    b.HasIndex("Subjectsid");

                    b.ToTable("StudentSubject");
                });

            modelBuilder.Entity("ExportandImportExcelSheet.Models.Student", b =>
                {
                    b.HasOne("ExportandImportExcelSheet.Models.Schoole", "Schoole")
                        .WithMany("Students")
                        .HasForeignKey("SchooleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schoole");
                });

            modelBuilder.Entity("ExportandImportExcelSheet.Models.Teasher", b =>
                {
                    b.HasOne("ExportandImportExcelSheet.Models.Schoole", "Schoole")
                        .WithMany("Teashers")
                        .HasForeignKey("SchooleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schoole");
                });

            modelBuilder.Entity("SchooleSubject", b =>
                {
                    b.HasOne("ExportandImportExcelSheet.Models.Schoole", null)
                        .WithMany()
                        .HasForeignKey("SchoolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExportandImportExcelSheet.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("Subjectsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentSubject", b =>
                {
                    b.HasOne("ExportandImportExcelSheet.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExportandImportExcelSheet.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("Subjectsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExportandImportExcelSheet.Models.Schoole", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teashers");
                });
#pragma warning restore 612, 618
        }
    }
}
